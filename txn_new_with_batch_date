
from pyspark.sql import SparkSession
from pyspark.sql.functions import *
from pyspark.sql.window import Window

def transform(spark: SparkSession, primary_key: list):

    super_omni_newr_seqhist_daily_ng_dat_df = spark.sql("select coalesce(t1.participant_id, '-9999') as participant_id,coalesce(pld.client_id,'NG') as client_id, coalesce(t1.plan_number, '-9999') as plan_number,coalesce(t1.base_transaction_code, '-9999') as base_transaction_code, coalesce(t1.activity_type, '-9999') as activity_type,coalesce(nullif(t1.rev_code,''),'0') as rev_code,coalesce(t1.run_time, '-9999') as run_time, coalesce(cast(t1.trade_date as DATE), current_date()) as trade_date,  coalesce(t1.sequence_number, '-9999') as sequence_number, coalesce(cast(t1.run_date as DATE), current_date()) as run_date, coalesce(t1.posting_process_counter ,'-9999') as posting_process_counter,tt1.category as category,tt1.activity as activity,tt1.activity_code_description,cast(t1.alternate_posting_process_counter as INTEGER) alt_posting_process_counter,cast(t1.associated_activity as INTEGER) as associated_activity,cast(t1.cash as DECIMAL(13, 2)) as cash,pf.fund_code as fund_number,t1.margin_code,cast(t1.other_cash as DECIMAL(13, 2)),cast(t1.pay_period_end_date as DATE),cast(t1.previous_activity_date as DATE) as previous_activity_date,cast(t1.reserved_cash_shares_ind as DECIMAL(15, 2)),t1.reversal_reason,to_date( cast(t1.reverse_run_date as date ) ) as reverse_run_date,t1.money_source as money_source,cast(t1.share_cost as DECIMAL(13, 2)) as share_cost,cast(t1.share_price as DECIMAL(13, 6)) as share_price,cast(t1.shares as DECIMAL(13, 4)) as shares, t1.fund_id as fund_iv,t1.standard_usage_code_1 as standard_usage_code_1,cast(null as DATE) as source_processing_date,cast(null as DATE) as source_cycle_date, t1.standard_usage_code_2 as standard_usage_code_2,t1.standard_usage_code_3 as standard_usage_code_3,t1.standard_usage_code_4 as standard_usage_code_4, t1.standard_usage_code_5 as standard_usage_code_5, cast(t1.sub_activity as INTEGER) as sub_activity_code,t1.trade_type,cast(t1.uninvested_cash as DECIMAL(13, 2)),t1.usage_code_1 as usage_code_1,t1.usage_code_2 as usage_code_2,t1.usage_code_3 as usage_code_3, t1.usage_code_4 as usage_code_4, t1.usage_code_5 as usage_code_5,t1.use_plan_year_flag,cast(t1.voucher_number as INTEGER) as voucher_number,'VRP-PB' as source_system,record_type, rec_type, plan_sequence, pend_stat,cast(currency_value as DECIMAL(13, 2)),currency_code,xr_type, cast(xr_rate as DECIMAL(11, 6)),cast(net_currency_value as DECIMAL(13, 2)), rec_code,plan_num,fileid_name,fileid_ext,fileid_ptr_indic,tran_code,cast(part_num as INTEGER),  part_num_x, part_sub_plan,part_ext1, fund_src,etin_num,cast(tran_seq as INTEGER), separate_acct,company_code,share_class, seq_oper_code, part_ext,t1.batch_date from super_omni_newr_seqhist_daily_ng_dat t1 left outer join exn_xxewre01_xxewrpfd_ng pf on t1.fund_id = pf.fund_iv and t1.plan_number=pf.plan_number left outer join (select plan_number ,client_id from super_omni_newr_plan_daily_ng_dat) as pld on pld.plan_number=t1.plan_number  left outer join  (select usage_code_1,usage_code_2,usage_code_3,usage_code_4,usage_code_5,standard_usage_code_1,standard_usage_code_2,standard_usage_code_3,standard_usage_code_4,standard_usage_code_5,category,activity,base_transaction_code,activity_type,process_flag,activity_code_description from transaction_type_csv ) tt1 on case when t1.base_transaction_code in ('035','363','815','383','387','801','813','820','833','844','850','851','966') then t1.base_transaction_code = tt1.base_transaction_code when t1.usage_code_1 in ('1', '2','3','4','5','6','7','8','9','A','B','C','L') then t1.usage_code_1 = tt1.usage_code_1 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_2 in ('3','7','8','9','A','C','L','O','T','U','V') then t1.usage_code_2 = tt1.usage_code_2 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when  t1.usage_code_3 in ('8','9') then t1.usage_code_3 = tt1.usage_code_3 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_4 in ('1', '2','3','4','5','6','7','8','9','A','B','C','D','L','R','WR','X','Z') then t1.usage_code_4 = tt1.usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when t1.usage_code_5 in ('9') then t1.usage_code_5 = tt1.usage_code_5 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when t1.standard_usage_code_4 in ('1','2','R') then t1.standard_usage_code_4 = tt1.standard_usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') else case when tt1.usage_code_1 is null and tt1.usage_code_2 is null and tt1.usage_code_3 is null and tt1.usage_code_4 is null and tt1.usage_code_5 is null and tt1.standard_usage_code_1 is null and tt1.standard_usage_code_2 is null and tt1.standard_usage_code_3 is null and tt1.standard_usage_code_4 is null and tt1.standard_usage_code_5 is null then t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') end end where participant_id !='000000000' and process_flag='Y' and  t1.batch_date in (select batch_date from super_omni_newr_seqhist_daily_jb_dat order by batch_date desc limit 2) ")

    # exn_xxewre01_xxewrtrxh_jb_df = spark.sql("select coalesce(t1.participant_id, '-9999') as participant_id,coalesce(pld.client_id,'-9999') as client_id, coalesce(t1.plan_number, '-9999') as plan_number,coalesce(t1.base_transaction_code, '-9999') as base_transaction_code, coalesce(t1.activity_type, '-9999') as activity_type,coalesce(nullif(t1.rev_code,''),'0') as rev_code,coalesce(t1.run_time, '-9999') as run_time, coalesce(cast(t1.trade_date as DATE), current_date()) as trade_date,  coalesce(t1.sequence_number, '-9999') as sequence_number, coalesce(cast(t1.run_date as DATE), current_date()) as run_date, coalesce(t1.posting_process_counter ,'-9999') as posting_process_counter,tt1.category as category,tt1.activity as activity,tt1.activity_code_description,cast(t1.alternate_posting_process_counter as INTEGER) alt_posting_process_counter,cast(t1.associated_activity as INTEGER) as associated_activity,cast(t1.cash as DECIMAL(13, 2)) as cash,pf.price_id as fund_number,t1.margin_code,cast(t1.other_cash as DECIMAL(13, 2)),cast(t1.pay_period_end_date as DATE),cast(t1.previous_activity_date as DATE) as previous_activity_date,cast(t1.reserved_cash_shares_ind as DECIMAL(15, 2)),t1.reversal_reason,to_date( cast(t1.reverse_run_date as date ) ) as reverse_run_date,t1.money_source as money_source,cast(t1.share_cost as DECIMAL(13, 2)) as share_cost,cast(t1.share_price as DECIMAL(13, 6)) as share_price,cast(t1.shares as DECIMAL(13, 4)) as shares, t1.fund_id as fund_iv,t1.standard_usage_code_1 as standard_usage_code_1,cast(null as DATE) as source_processing_date,cast(null as DATE) as source_cycle_date, t1.standard_usage_code_2 as standard_usage_code_2,t1.standard_usage_code_3 as standard_usage_code_3,t1.standard_usage_code_4 as standard_usage_code_4, t1.standard_usage_code_5 as standard_usage_code_5, cast(t1.sub_activity as INTEGER) as sub_activity_code,t1.trade_type,cast(t1.uninvested_cash as DECIMAL(13, 2)),t1.usage_code_1 as usage_code_1,t1.usage_code_2 as usage_code_2,t1.usage_code_3 as usage_code_3, t1.usage_code_4 as usage_code_4, t1.usage_code_5 as usage_code_5,t1.use_plan_year_flag,cast(t1.voucher_number as INTEGER) as voucher_number,'VRP-SP' as source_system,record_type, rec_type, plan_sequence, pend_stat,cast(currency_value as DECIMAL(13, 2)),currency_code,xr_type, cast(xr_rate as DECIMAL(11, 6)),cast(net_currency_value as DECIMAL(13, 2)), rec_code,plan_num,fileid_name,fileid_ext,fileid_ptr_indic,tran_code,cast(part_num as INTEGER),  part_num_x, part_sub_plan,part_ext1, fund_src,etin_num,cast(tran_seq as INTEGER), separate_acct,company_code,share_class, seq_oper_code, part_ext from exn_xxewre01_xxewrtrxh_jb t1 left outer join exn_xxewre01_xxewrpfd_jb pf on t1.fund_id = pf.fund_iv and t1.plan_number=pf.plan_number left outer join (select plan_number ,client_id from exn_xxewre01_xxewrpld_jb) as pld on pld.plan_number=t1.plan_number  left outer join  (select usage_code_1,usage_code_2,usage_code_3,usage_code_4,usage_code_5,standard_usage_code_1,standard_usage_code_2,standard_usage_code_3,standard_usage_code_4,standard_usage_code_5,category,activity,base_transaction_code,activity_type,process_flag,activity_code_description from transaction_type_csv ) tt1 on case when t1.base_transaction_code in ('035','363','383','387','801','813','820','815','833','844','850','851','966') then t1.base_transaction_code = tt1.base_transaction_code when t1.usage_code_1 in ('1', '2','3','4','5','6','7','8','9','A','B','C','L') then t1.usage_code_1 = tt1.usage_code_1 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_2 in ('3','7','8','9','A','C','L','O','T','U','V') then t1.usage_code_2 = tt1.usage_code_2 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when  t1.usage_code_3 in ('8','9') then t1.usage_code_3 = tt1.usage_code_3 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_4 in ('1', '2','3','4','5','6','7','8','9','A','B','C','D','L','R','WR','X','Z') then t1.usage_code_4 = tt1.usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when t1.usage_code_5 in ('9') then t1.usage_code_5 = tt1.usage_code_5 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when t1.standard_usage_code_4 in ('1','2','R') then t1.standard_usage_code_4 = tt1.standard_usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') else case when tt1.usage_code_1 is null and tt1.usage_code_2 is null and tt1.usage_code_3 is null and tt1.usage_code_4 is null and tt1.usage_code_5 is null and tt1.standard_usage_code_1 is null and tt1.standard_usage_code_2 is null and tt1.standard_usage_code_3 is null and tt1.standard_usage_code_4 is null and tt1.standard_usage_code_5 is null then t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') end end where participant_id !='000000000' and process_flag='Y' ")

    # exn_xxewre01_xxewrtrxh_ng_df = spark.sql("select coalesce(t1.participant_id, '-9999') as participant_id,coalesce(pld.client_id,'NG') as client_id, coalesce(t1.plan_number, '-9999') as plan_number,coalesce(t1.base_transaction_code, '-9999') as base_transaction_code, coalesce(t1.activity_type, '-9999') as activity_type,coalesce(nullif(t1.rev_code,''),'0') as rev_code,coalesce(t1.run_time, '-9999') as run_time, coalesce(cast(t1.trade_date as DATE), current_date()) as trade_date,  coalesce(t1.sequence_number, '-9999') as sequence_number, coalesce(cast(t1.run_date as DATE), current_date()) as run_date, coalesce(t1.posting_process_counter ,'-9999') as posting_process_counter,tt1.category as category,tt1.activity as activity,tt1.activity_code_description,cast(t1.alternate_posting_process_counter as INTEGER) alt_posting_process_counter,cast(t1.associated_activity as INTEGER) as associated_activity,cast(t1.cash as DECIMAL(13, 2)) as cash,pf.fund_code as fund_number,t1.margin_code,cast(t1.other_cash as DECIMAL(13, 2)),cast(t1.pay_period_end_date as DATE),cast(t1.previous_activity_date as DATE) as previous_activity_date,cast(t1.reserved_cash_shares_ind as DECIMAL(15, 2)),t1.reversal_reason,to_date( cast(t1.reverse_run_date as date ) ) as reverse_run_date,t1.money_source as money_source,cast(t1.share_cost as DECIMAL(13, 2)) as share_cost,cast(t1.share_price as DECIMAL(13, 6)) as share_price,cast(t1.shares as DECIMAL(13, 4)) as shares, t1.fund_id as fund_iv,t1.standard_usage_code_1 as standard_usage_code_1,cast(null as DATE) as source_processing_date,cast(null as DATE) as source_cycle_date, t1.standard_usage_code_2 as standard_usage_code_2,t1.standard_usage_code_3 as standard_usage_code_3,t1.standard_usage_code_4 as standard_usage_code_4, t1.standard_usage_code_5 as standard_usage_code_5, cast(t1.sub_activity as INTEGER) as sub_activity_code,t1.trade_type,cast(t1.uninvested_cash as DECIMAL(13, 2)),t1.usage_code_1 as usage_code_1,t1.usage_code_2 as usage_code_2,t1.usage_code_3 as usage_code_3, t1.usage_code_4 as usage_code_4, t1.usage_code_5 as usage_code_5,t1.use_plan_year_flag,cast(t1.voucher_number as INTEGER) as voucher_number,'VRP-PB' as source_system,record_type, rec_type, plan_sequence, pend_stat,cast(currency_value as DECIMAL(13, 2)),currency_code,xr_type, cast(xr_rate as DECIMAL(11, 6)),cast(net_currency_value as DECIMAL(13, 2)), rec_code,plan_num,fileid_name,fileid_ext,fileid_ptr_indic,tran_code,cast(part_num as INTEGER),  part_num_x, part_sub_plan,part_ext1, fund_src,etin_num,cast(tran_seq as INTEGER), separate_acct,company_code,share_class, seq_oper_code, part_ext from exn_xxewre01_xxewrtrxh_ng t1 left outer join exn_xxewre01_xxewrpfd_ng pf on t1.fund_id = pf.fund_iv and t1.plan_number=pf.plan_number left outer join (select plan_number ,client_id from exn_xxewre01_xxewrpld_ng) as pld on pld.plan_number=t1.plan_number left outer join  (select usage_code_1,usage_code_2,usage_code_3,usage_code_4,usage_code_5,standard_usage_code_1,standard_usage_code_2,standard_usage_code_3,standard_usage_code_4,standard_usage_code_5,category,activity,base_transaction_code,activity_type,process_flag,activity_code_description from transaction_type_csv ) tt1 on case when t1.base_transaction_code in ('035','363','383','387','801','813','820','833','815','844','850','851','966') then t1.base_transaction_code = tt1.base_transaction_code when t1.usage_code_1 in ('1', '2','3','4','5','6','7','8','9','A','B','C','L') then t1.usage_code_1 = tt1.usage_code_1 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_2 in ('3','7','8','9','A','C','L','O','T','U','V') then t1.usage_code_2 = tt1.usage_code_2 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when  t1.usage_code_3 in ('8','9') then t1.usage_code_3 = tt1.usage_code_3 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_4 in ('1', '2','3','4','5','6','7','8','9','A','B','C','D','L','R','WR','X','Z') then t1.usage_code_4 = tt1.usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when t1.usage_code_5 in ('9') then t1.usage_code_5 = tt1.usage_code_5 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when t1.standard_usage_code_4 in ('1','2','R') then t1.standard_usage_code_4 = tt1.standard_usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') else case when tt1.usage_code_1 is null and tt1.usage_code_2 is null and tt1.usage_code_3 is null and tt1.usage_code_4 is null and tt1.usage_code_5 is null and tt1.standard_usage_code_1 is null and tt1.standard_usage_code_2 is null and tt1.standard_usage_code_3 is null and tt1.standard_usage_code_4 is null and tt1.standard_usage_code_5 is null then t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') end end where participant_id !='000000000' and process_flag='Y'")

    super_omni_newr_seqhist_daily_jb_dat_df = spark.sql("select coalesce(t1.participant_id, '-9999') as participant_id,coalesce(pld.client_id,'-9999') as client_id, coalesce(t1.plan_number, '-9999') as plan_number,coalesce(t1.base_transaction_code, '-9999') as base_transaction_code, coalesce(t1.activity_type, '-9999') as activity_type,coalesce(nullif(t1.rev_code,''),'0') as rev_code,coalesce(t1.run_time, '-9999') as run_time, coalesce(cast(t1.trade_date as DATE), current_date()) as trade_date,  coalesce(t1.sequence_number, '-9999') as sequence_number, coalesce(cast(t1.run_date as DATE), current_date()) as run_date, coalesce(t1.posting_process_counter ,'-9999') as posting_process_counter,tt1.category as category,tt1.activity as activity,tt1.activity_code_description,cast(t1.alternate_posting_process_counter as INTEGER) alt_posting_process_counter,cast(t1.associated_activity as INTEGER) as associated_activity,cast(t1.cash as DECIMAL(13, 2)) as cash,pf.price_id as fund_number,t1.margin_code,cast(t1.other_cash as DECIMAL(13, 2)),cast(t1.pay_period_end_date as DATE),cast(t1.previous_activity_date as DATE) as previous_activity_date,cast(t1.reserved_cash_shares_ind as DECIMAL(15, 2)),t1.reversal_reason,to_date( cast(t1.reverse_run_date as date ) ) as reverse_run_date,t1.money_source as money_source,cast(t1.share_cost as DECIMAL(13, 2)) as share_cost,cast(t1.share_price as DECIMAL(13, 6)) as share_price,cast(t1.shares as DECIMAL(13, 4)) as shares, t1.fund_id as fund_iv,t1.standard_usage_code_1 as standard_usage_code_1,cast(null as DATE) as source_processing_date,cast(null as DATE) as source_cycle_date, t1.standard_usage_code_2 as standard_usage_code_2,t1.standard_usage_code_3 as standard_usage_code_3,t1.standard_usage_code_4 as standard_usage_code_4, t1.standard_usage_code_5 as standard_usage_code_5, cast(t1.sub_activity as INTEGER) as sub_activity_code,t1.trade_type,cast(t1.uninvested_cash as DECIMAL(13, 2)),t1.usage_code_1 as usage_code_1,t1.usage_code_2 as usage_code_2,t1.usage_code_3 as usage_code_3, t1.usage_code_4 as usage_code_4, t1.usage_code_5 as usage_code_5,t1.use_plan_year_flag,cast(t1.voucher_number as INTEGER) as voucher_number,'VRP-SP' as source_system,record_type, rec_type, plan_sequence, pend_stat,cast(currency_value as DECIMAL(13, 2)),currency_code,xr_type, cast(xr_rate as DECIMAL(11, 6)),cast(net_currency_value as DECIMAL(13, 2)), rec_code,plan_num,fileid_name,fileid_ext,fileid_ptr_indic,tran_code,cast(part_num as INTEGER),  part_num_x, part_sub_plan,part_ext1, fund_src,etin_num,cast(tran_seq as INTEGER), separate_acct,company_code,share_class, seq_oper_code, part_ext,t1.batch_date from super_omni_newr_seqhist_daily_jb_dat t1 left outer join exn_xxewre01_xxewrpfd_jb pf on t1.fund_id = pf.fund_iv and t1.plan_number=pf.plan_number left outer join (select plan_number ,client_id from super_omni_newr_plan_daily_jb_dat) as pld on pld.plan_number=t1.plan_number left outer join  (select usage_code_1,usage_code_2,usage_code_3,usage_code_4,usage_code_5,standard_usage_code_1,standard_usage_code_2,standard_usage_code_3,standard_usage_code_4,standard_usage_code_5,category,activity,base_transaction_code,activity_type,process_flag,activity_code_description from transaction_type_csv ) tt1 on case when t1.base_transaction_code in ('035','363','383','387','801','813','820','833','815','844','850','851','966') then t1.base_transaction_code = tt1.base_transaction_code when t1.usage_code_1 in ('1', '2','3','4','5','6','7','8','9','A','B','C','L') then t1.usage_code_1 = tt1.usage_code_1 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_2 in ('3','7','8','9','A','C','L','O','T','U','V') then t1.usage_code_2 = tt1.usage_code_2 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when  t1.usage_code_3 in ('8','9') then t1.usage_code_3 = tt1.usage_code_3 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when  t1.usage_code_4 in ('1', '2','3','4','5','6','7','8','9','A','B','C','D','L','R','WR','X','Z') then t1.usage_code_4 = tt1.usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') when t1.usage_code_5 in ('9') then t1.usage_code_5 = tt1.usage_code_5 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999')  when t1.standard_usage_code_4 in ('1','2','R') then t1.standard_usage_code_4 = tt1.standard_usage_code_4 and t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') else case when tt1.usage_code_1 is null and tt1.usage_code_2 is null and tt1.usage_code_3 is null and tt1.usage_code_4 is null and tt1.usage_code_5 is null and tt1.standard_usage_code_1 is null and tt1.standard_usage_code_2 is null and tt1.standard_usage_code_3 is null and tt1.standard_usage_code_4 is null and tt1.standard_usage_code_5 is null then t1.base_transaction_code = tt1.base_transaction_code and coalesce(cast(t1.activity_type as integer), '-9999') = coalesce(cast(tt1.activity_type as INTEGER), '-9999') end end where participant_id !='000000000' and process_flag='Y' and t1.batch_date in (select batch_date from super_omni_newr_seqhist_daily_jb_dat order by batch_date desc limit 2) ")

    # transform_df = super_omni_newr_seqhist_daily_ng_dat_df.unionByName(exn_xxewre01_xxewrtrxh_jb_df).unionByName(exn_xxewre01_xxewrtrxh_ng_df).unionByName(super_omni_newr_seqhist_daily_jb_dat_df)
    transform_df = super_omni_newr_seqhist_daily_ng_dat_df.unionByName(super_omni_newr_seqhist_daily_jb_dat_df)
    # transform_df = exn_xxewre01_xxewrtrxh_jb_df.unionByName(exn_xxewre01_xxewrtrxh_ng_df)

    windowSpec = Window.partitionBy(*primary_key).orderBy(col("batch_date").desc())

    # Add a rank column to the DataFrame based on 'batch_date' in descending order within each partition
    df_ranked = transform_df.withColumn("rank", rank().over(windowSpec))

    # Filter the DataFrame to get the latest record (rank 1) within each partition
    result_df = df_ranked.filter(col("rank") == 1)
    transform_df=result_df.drop("batch_date")

    return transform_df
